{"version":3,"sources":["common.js"],"names":["OSS","require","current_checkpoint","progress","p","checkpoint","done","uploadFile","file","client","key","index","uploadFileClient","options","partSize","meta","year","people","Promise","resolve","reject","nowindex","multipartUpload","then","res","console","log","successIndex","err","error","failIndex","isCancel","message","getObjectURL","url","window","createObjectURL","undefined","URL","webkitURL","extname","temp","split","filename","length","filenameWithoutSuffix","exec","isImageFileType","type","indexOf","isImageUrl","thumbUrl","extension","test"],"mappings":"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","sourcesContent":["/**\n *\n * @authors zcy (1366969408@qq.com)\n * @date    2018-03-28 09:51:18\n * @version $Id$\n */\n//上传图片到阿里云\nimport { message } from \"antd\";\nconst OSS = require(\"ali-oss\");\nlet current_checkpoint;\nconst progress = (p, checkpoint) => {\n    return function (done) {\n        current_checkpoint = checkpoint;\n        done();\n    };\n};\nconst uploadFile = (file, client, key, index) => {\n    let uploadFileClient = new OSS(client);\n    var options = {\n        progress: progress,\n        partSize: 100 * 1024,\n        meta: {\n            year: 2017,\n            people: \"test\"\n        }\n    };\n    if (current_checkpoint) {\n        options.checkpoint = current_checkpoint;\n    }\n    return new Promise((resolve, reject) => {\n        const nowindex = index;\n        uploadFileClient\n            .multipartUpload(key, file, options)\n            .then((res) => {\n            console.log(\"upload success: %j\", res);\n            current_checkpoint = null;\n            uploadFileClient = null;\n            res.successIndex = nowindex;\n            resolve(res);\n        })\n            .catch((err) => {\n            console.log(err);\n            reject({ error: \"error\", failIndex: nowindex });\n            if (uploadFileClient && uploadFileClient.isCancel()) {\n                message.error(\"stop-upload!\");\n            }\n            else {\n                message.error(\"error\");\n            }\n        });\n    });\n}; //上传图片初始化信息\n//获取图片路径\nconst getObjectURL = (file) => {\n    var url = null;\n    if (window.createObjectURL != undefined) {\n        // basic\n        url = window.createObjectURL(file);\n    }\n    else if (window.URL != undefined) {\n        // mozilla(firefox)\n        url = window.URL.createObjectURL(file);\n    }\n    else if (window.webkitURL != undefined) {\n        // webkit or chrome\n        url = window.webkitURL.createObjectURL(file);\n    }\n    return url;\n};\nvar extname = function extname(url) {\n    if (!url) {\n        return \"\";\n    }\n    var temp = url.split(\"/\");\n    var filename = temp[temp.length - 1];\n    var filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n    return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [\"\"])[0];\n};\nconst isImageFileType = function isImageFileType(type) {\n    return !!type && type.indexOf(\"image/\") === 0;\n};\nconst isImageUrl = function isImageUrl(file) {\n    if (isImageFileType(file.type)) {\n        return true;\n    }\n    var url = file.thumbUrl || file.url;\n    if (!url) {\n        return false;\n    }\n    var extension = extname(url);\n    if (/^data:image\\//.test(url) ||\n        /(webp|svg|png|gif|jpg|jpeg|bmp|dpg)$/i.test(extension)) {\n        return true;\n    }\n    else if (/^data:/.test(url)) {\n        // other file types of base64\n        return false;\n    }\n    else if (extension) {\n        // other file types which have extension\n        return false;\n    }\n    return true;\n};\nexport { uploadFile, getObjectURL, isImageUrl };\n"],"file":"common.js"}