{"version":3,"sources":["ImageModal.jsx"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","React","Modal","Cropper","CreateForm","props","Modalcropper","modalVisible","handleAdd","handleModalVisible","imgSrc","aspectRatio","submit","croppedCanvas","getCroppedCanvas","toBlob","blob","name","filedata","FormData","append","file","File","type","lastModified","Date","now","cropW","data","detail","dataHeight","document","getElementById","dataWidth","innerText","Math","round","height","width","reset","cropper"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from \"react\";\nimport { Modal } from \"antd\";\nimport \"cropperjs/dist/cropper.css\";\nimport Cropper from \"react-cropper\";\nimport \"./copper.less\";\nconst CreateForm = props => {\n    let Modalcropper = null;\n    const { modalVisible, handleAdd, handleModalVisible, imgSrc, aspectRatio } = props;\n    const submit = () => {\n        if (Modalcropper) {\n            let croppedCanvas = Modalcropper.getCroppedCanvas();\n            croppedCanvas.toBlob((blob) => __awaiter(void 0, void 0, void 0, function* () {\n                // 图片name添加到blob对象里\n                blob.name = \"athen\";\n                // 创建提交表单数据对象\n                const filedata = new FormData();\n                // 添加要上传的文件\n                filedata.append(\"file\", blob, blob.name);\n                var file = new File([blob], \"filename\", {\n                    type: \"image/jpeg\",\n                    lastModified: Date.now()\n                });\n                handleAdd(file);\n                // try {\n                //   // 接口\n                //   let res = await upload(filedata, token);\n                //   if (res.errCode === 0) {\n                //     // 上传成功\n                //   } else {\n                //     // 上传失败\n                //   }\n                // } catch (err) {\n                //   console.log(err);\n                // }\n            }), \"image/jpeg\");\n        }\n    };\n    const cropW = e => {\n        var data = e.detail;\n        // this.setState({\n        //   dataWidth: Math.round(data.width),\n        //   dataHeight: Math.round(data.height),\n        // });\n        var dataHeight = document.getElementById(\"dataHeight\");\n        var dataWidth = document.getElementById(\"dataWidth\");\n        if (dataHeight) {\n            dataHeight.innerText = Math.round(data.height);\n        }\n        if (dataWidth) {\n            dataWidth.innerText = Math.round(data.width);\n        }\n        /*\n        console.log(e.type);\n        dataX.value = Math.round(data.x);\n        dataY.value = Math.round(data.y);\n        dataHeight.value = Math.round(data.height);\n        dataWidth.value = Math.round(data.width);\n        dataRotate.value = typeof data.rotate !== 'undefined' ? data.rotate : '';\n        dataScaleX.value = typeof data.scaleX !== 'undefined' ? data.scaleX : '';\n        dataScaleY.value = typeof data.scaleY !== 'undefined' ? data.scaleY : '';\n         */\n    };\n    const reset = () => {\n        Modalcropper.reset();\n    };\n    return (<Modal width={800} destroyOnClose maskClosable={false} title={\"裁剪图片\"} visible={modalVisible} onOk={submit} onCancel={() => handleModalVisible()}>\r\n      <div className=\"preview-parent\">\r\n        <Cropper style={{ width: 450, height: 450 }} src={imgSrc} className=\"company-logo-cropper\" ref={(cropper) => (Modalcropper = cropper)} \n    // Cropper.js options\n    zoomable={true} cropBoxMovable={false} cropBoxResizable={false} aspectRatio={aspectRatio} // 这个是设置比例的参数 我这里设置的1:1\n     guides={true} dragMode={\"move\"} minCropBoxWidth={300} minCropBoxHeight={300} toggleDragModeOnDblclick={false} autoCropArea={1} crop={cropW} preview=\".cropper-preview\" viewMode={1}/>\r\n        <div className=\"preview-container\">\r\n          <div className=\"cropper-preview\"/>\r\n          <div className=\"docs-data\">\r\n            <div className=\"input-group input-group-sm\">\r\n              <span className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\">宽度：</label>\r\n              </span>\r\n              <span className=\"form-control\" id=\"dataWidth\"/>\r\n              <span className=\"input-group-append\">\r\n                <span className=\"input-group-text\">px</span>\r\n              </span>\r\n            </div>\r\n            <div className=\"input-group input-group-sm\">\r\n              <span className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\">高度：</label>\r\n              </span>\r\n              <span className=\"form-control\" id=\"dataHeight\"/>\r\n              <span className=\"input-group-append\">\r\n                <span className=\"input-group-text\">px</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"resetBtn\" onClick={reset}>\r\n            清空操作\r\n          </div>\r\n        </div>\r\n        {Modalcropper && Modalcropper.getCroppedCanvas()}\r\n      </div>\r\n    </Modal>);\n};\n/*\n style={{ width: '100%', height: 400 }}\n        minCropBoxWidth={300}\n        minCropBoxHeight={300}\n*/\nexport default CreateForm;\n"],"file":"ImageModal.js"}